{
  "transactions": [
    {
      "hash": null,
      "transactionType": "CREATE",
      "contractName": "TslaPriceFeed",
      "contractAddress": "0xf95d665822246f8bccfb4bb91356cfe328729277",
      "function": null,
      "arguments": [
        "\"import fetch from 'node-fetch';\\r\\n\\r\\n// const fs = require(\\\"fs\\\")\\r\\n// const { Location, ReturnType, CodeLanguage } = require(\\\"@chainlink/functions-toolkit\\\")\\r\\n// const { simulateScript, decodeResult } = require(\\\"@chainlink/functions-toolkit\\\")\\r\\n\\r\\n// Replace with your own API key and secret\\r\\nconst API_KEY = 'PKGSU2AKQCTFJHNVB9AQ';\\r\\nconst API_SECRET = 'oCxTw7J8OuX5CwNRtd9NR1ooc0uGRDmfEcg3cW0v';\\r\\nconst BASE_URL = 'https://data.alpaca.markets'; // Data API URL\\r\\n\\r\\n\\r\\n// const requestConfig = {\\r\\n//     // String containing the source code to be executed\\r\\n//     source: fs.readFileSync(\\\"./functions/sources/alpacaBalance.js\\\").toString(),\\r\\n//     //source: fs.readFileSync(\\\"./API-request-example.js\\\").toString(),\\r\\n//     // Location of source code (only Inline is currently supported)\\r\\n//     codeLocation: Location.Inline,\\r\\n//     // Optional. Secrets can be accessed within the source code with `secrets.varName` (ie: secrets.apiKey). The secrets object can only contain string values.\\r\\n//     secrets: { alpacaKey: process.env.ALPACA_KEY ?? \\\"\\\", alpacaSecret: process.env.ALPACA_SECRET ?? \\\"\\\" },\\r\\n//     // Optional if secrets are expected in the sourceLocation of secrets (only Remote or DONHosted is supported)\\r\\n//     secretsLocation: Location.DONHosted,\\r\\n//     // Args (string only array) can be accessed within the source code with `args[index]` (ie: args[0]).\\r\\n//     args: [],\\r\\n//     // Code language (only JavaScript is currently supported)\\r\\n//     codeLanguage: CodeLanguage.JavaScript,\\r\\n//     // Expected type of the returned value\\r\\n//     expectedReturnType: ReturnType.uint256,\\r\\n// }\\r\\n\\r\\n\\r\\n// const alpacaRequest = Functions.makeHttpRequest({\\r\\n//     url: url,\\r\\n//     headers: {\\r\\n//         'APCA-API-KEY-ID': API_KEY,\\r\\n//         'APCA-API-SECRET-KEY': API_SECRET\\r\\n//     }\\r\\n//   })\\r\\n  \\r\\n//   const [response] = await Promise.all([\\r\\n//     alpacaRequest,\\r\\n//   ])\\r\\n  \\r\\n//   const portfolioBalance = response.data.portfolio_value\\r\\n//   console.log(`Alpaca Portfolio Balance: $${portfolioBalance}`)\\r\\n  // The source code MUST return a Buffer or the request will return an error message\\r\\n  // Use one of the following functions to convert to a Buffer representing the response bytes that are returned to the consumer smart contract:\\r\\n  // - Functions.encodeUint256\\r\\n  // - Functions.encodeInt256\\r\\n  // - Functions.encodeString\\r\\n  // Or return a custom Buffer for a custom byte encoding\\r\\n//   return Functions.encodeUint256(Math.round(portfolioBalance * 1000000000000000000))\\r\\n\\r\\n// async function main() {\\r\\n//     const { responseBytesHexstring, errorString, capturedTerminalOutput } = await simulateScript(requestConfig)\\r\\n//     console.log(`${capturedTerminalOutput}\\\\n`)\\r\\n//     if (responseBytesHexstring) {\\r\\n//         console.log(\\r\\n//             `Response returned by script during local simulation: ${decodeResult(\\r\\n//                 responseBytesHexstring,\\r\\n//                 requestConfig.expectedReturnType\\r\\n//             ).toString()}\\\\n`\\r\\n//         )\\r\\n//     }\\r\\n//     if (errorString) {\\r\\n//         console.log(`Error returned by simulated script:\\\\n${errorString}\\\\n`)\\r\\n//     }\\r\\n// }\\r\\n\\r\\n// main().catch((error) => {\\r\\n//     console.error(error);\\r\\n//     process.exitCode = 1;\\r\\n// });\\r\\n\\r\\n// // Function to get latest price\\r\\nasync function getLatestPrice(symbol) {\\r\\n  const url = `${BASE_URL}/v2/stocks/${symbol}/quotes/latest`;\\r\\n  const headers = {\\r\\n    'APCA-API-KEY-ID': API_KEY,\\r\\n    'APCA-API-SECRET-KEY': API_SECRET\\r\\n  };\\r\\n\\r\\n  try {\\r\\n    const response = await fetch(url, { headers });\\r\\n    if (!response.ok) {\\r\\n      throw new Error(`HTTP error! status: ${response.status}`);\\r\\n    }\\r\\n    const data = await response.json();\\r\\n    return data.quote.ap;\\r\\n  } catch (error) {\\r\\n    console.error(`Error fetching latest price for ${symbol}: ${error.message}`);\\r\\n  }\\r\\n}\\r\\n\\r\\n// Replace 'TSLA' with your desired stock symbol\\r\\nconst symbol = 'TSLA';\\r\\nconst url = `${BASE_URL}/v2/stocks/${symbol}/quotes/latest`;\\r\\n\\r\\ngetLatestPrice(symbol).then(latestPrice => {\\r\\n  if (latestPrice !== undefined) {\\r\\n    console.log(`The latest price of ${symbol} is $${latestPrice}`);\\r\\n  }\\r\\n});\\r\\n\"",
        "0xb83E47C2bC239B3bf370bc41e1459A34b41238D0",
        "3138",
        "1719239760",
        "0",
        "0x66756e2d657468657265756d2d7365706f6c69612d3100000000000000000000"
      ],
      "transaction": {
        "from": "0xeccf26e9f5474882a671d6136b32be1df8b2cdda",
        "gas": "0x4e974c",
        "value": "0x0",
        "input": "",
        "nonce": "0x21",
        "chainId": "0xaa36a7"
      },
      "additionalContracts": [],
      "isFixedGasLimit": false
    }
  ],
  "receipts": [],
  "libraries": [],
  "pending": [],
  "returns": {},
  "timestamp": 1719243440,
  "chain": 11155111,
  "commit": "7bee393"
}